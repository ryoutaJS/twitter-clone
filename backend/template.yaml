AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  python3.9

  Sample SAM Template for backend

Globals:
  Function:
    Timeout: 30
    MemorySize: 128

Parameters:
  StageName:
    Type: "String"
    Default: "v1"
  TweetsTableName:
    Type: String
    Default: "Tweets"
  LogRetentionInDays:
    Type: Number
    Default: 1

Resources:
  MyApi:
    # HTTPS エンドポイント経由で呼び出すことができる Amazon API Gateway リソースを作成
    Type: AWS::Serverless::Api
    Properties:
      # StageName: URIの最初のパスセグメントとして使用するステージの名前
      StageName: !Ref StageName # Parametersの参照
      MethodSettings:
        - DataTraceEnabled: false
          ResourcePath: "/*"
          HttpMethod: "*"
      # すべての API Gateway API のクロスオリジンリソース共有 (CORS) を管理
      Cors:
        # 指定されたオリジンからのリクエストを行うコードでレスポンスが共有できるかどうか
        AllowOrigin: "'*'"
        # レスポンスをフロントエンドの JavaScript コードに公開するかどうか
        AllowCredentials: false
        # 許可するHTsTPメソッド
        AllowMethods: "'OPTIONS,POST'"
        #  Access-Control-Request-Headers を含むプリフライトリクエストへのレスポンスで、実際のリクエストの間に使用できる HTTP ヘッダーを示すために使用
        # プリフライトリクエストについて: WebサーバがCORS要求を受け付けるかどうかを実際に要求を送信する前に確かめること。クライアントからOPTIONSメソッドのHTTPリクエストを送信する。
        AllowHeaders: "'Content-Type,X-CSRF-TOKEN,Access-Control-Allow-Origin'"

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn
